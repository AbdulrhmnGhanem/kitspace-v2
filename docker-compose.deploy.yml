version: '2'
services:
  frontend:
    image: 'ghcr.io/kitspace/frontend-v2:latest'
    restart: always

  gitea:
    image: 'ghcr.io/kitspace/gitea:latest'
    environment:
      - ROOT_URL=${KITSPACE_SCHEME}://gitea.${KITSPACE_DOMAIN}${KITSPACE_EXTERNAL_PORT}/
      - USER_UID=1000
      - USER_GID=1000
      - DB_TYPE=postgres
      - DB_HOST=postgres:5432
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=${POSTGRES_PASSWORD}
    volumes:
      - ./volumes/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./gitea:/go/src/code.gitea.io/gitea
    ports:
      - '3333:3000'
      - '2222:22'
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=gitea
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    restart: always

  nginx:
    image: 'kitspace/nginx-certbot-plugin:latest'
    command: /bin/bash --verbose -c "sed -e 's/@KITSPACE_DOMAIN/${KITSPACE_DOMAIN}/g' -e 's/@KITSPACE_URL/${KITSPACE_SCHEME}:\\/\\/${KITSPACE_DOMAIN}${KITSPACE_EXTERNAL_PORT}/g' /etc/nginx/conf.d/kitspace.template > /etc/nginx/conf.d/default.conf && /opt/command"
    depends_on:
      - frontend
      - gitea
      - processor
    environment:
      - 'RUN_CERTBOT=true'
      - CERTBOT_DOMAINS=${KITSPACE_DOMAIN},gitea.${KITSPACE_DOMAIN},processor.${KITSPACE_DOMAIN}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
    volumes:
      - /etc/letsencrypt
      - './nginx:/etc/nginx/conf.d'
      - './frontend:/srv/frontend'
    ports:
      - '80:80'
      - '443:443'
    restart: always

  processor:
    image: 'ghcr.io/kitspace/processor-v2:latest'
    ports:
      - '5000:5000'
    environment:
      - 'ALLOWED_CORS_DOMAINS=${KITSPACE_SCHEME}://${KITSPACE_DOMAIN}${KITSPACE_EXTERNAL_PORT}'
    volumes:
      - ./volumes/gitea/git/repositories:/repositories
      - ./volumes/processor:/data
      - ./processor:/app
      - ./processor/node_modules:/app/node_modules
    restart: always
